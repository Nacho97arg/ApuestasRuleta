import Ruleta as rimport numpy as npimport matplotlib.pyplot as mpimport matplotlib.figure as mpfimport Fibonacci as fibimport Martingala as mgruleta = r.Ruleta()resultadosIterFibFinitoFR = []resultadosIterFibFinitoCA = []resultadosIterMartFinitoFR = []resultadosIterMartFinitoCA = []def graficasUnaTirada(frecRelNro, capNro, frecRelCol, capCol, frecRelDec, capDec, titulo, capInicial):    mp.figure()    mp.suptitle(titulo)    mp.xlim(0,100)        graf1=mp.subplot(321)    graf1.set_title("Frecuencia Relativa Nro")    graf1.bar(np.arange(0,len(frecRelNro)),frecRelNro)    graf2=mp.subplot(322)    graf2.set_title("Evolucion del Capital Nro")    if capInicial:        graf2.axhline(1000000,color='red')    graf2.plot(capNro)    graf3=mp.subplot(323)    graf3.set_title("Frecuencia Relativa Color")    graf3.bar(np.arange(0,len(frecRelCol)),frecRelCol)    graf4=mp.subplot(324)    graf4.set_title("Evolucion del Capital Color")    if capInicial:        graf4.axhline(1000000,color='red')    graf4.plot(capCol)    graf5=mp.subplot(325)    graf5.set_title("Frecuencia Relativa Docena")    graf5.bar(np.arange(0,len(frecRelDec)),frecRelDec)    graf6=mp.subplot(326)    graf6.set_title("Evolucion del Capital Docena")    if capInicial:        graf6.axhline(1000000,color='red')    graf6.plot(capDec)    mp.show()def graficasIteraciones(iteracionesFR, iteracionesCA, titulo):    mp.figure()    mp.suptitle(titulo)    mp.xlim(0,100)    graf1=mp.subplot(211)    graf1.set_title("Frecuencias Relativas apuesta a Colores")    for it in iteracionesFR:        graf1.plot(it)    graf1.legend(["Iteracion 1","Iteracion 2","Iteracion 3","Iteracion 4","Iteracion 5"])    graf2=mp.subplot(212)    graf2.set_title("Evolucion de capitales")    for it in iteracionesCA:        graf2.plot(it)    graf2.legend(["Iteracion 1","Iteracion 2","Iteracion 3","Iteracion 4","Iteracion 5"])    mp.show()#Con capital acotadon = 100for i in range(5):    fibColor = fib.Fibonacci()    fibNro = fib.Fibonacci()    fibDocena = fib.Fibonacci()    mgNro = mg.Martingala()    mgColor = mg.Martingala()    mgDocena = mg.Martingala()    for x in range(n):        nro = ruleta.realizarTirada()        if fibNro.capital > fibNro.apuesta:            nroFib = fibNro.apostarNro()            fibNro.resultado(ruleta.apuestaPorNro(nroFib, fibNro.apuesta))        if fibColor.capital > fibColor.apuesta:            colorFib = fibColor.apostarColor()            fibColor.resultado(ruleta.apuestaPorColor(colorFib, fibColor.apuesta))        if fibDocena.capital > fibDocena.apuesta:            docenaFib = fibDocena.apostarDocena()            fibDocena.resultado(ruleta.apuestaPorDocena(docenaFib, fibDocena.apuesta))        if mgNro.capital > mgNro.apuesta:            nroMg = mgNro.apostarNro()            mgNro.resultado(ruleta.apuestaPorNro(nroMg, mgNro.apuesta))        if mgColor.capital > mgNro.apuesta:            colorMg = mgColor.apostarColor()            mgColor.resultado(ruleta.apuestaPorColor(colorMg, mgColor.apuesta))        if mgDocena.capital > mgDocena.apuesta:            docenaMg = mgDocena.apostarDocena()            mgDocena.resultado(ruleta.apuestaPorDocena(docenaMg, mgDocena.apuesta))    print("Interacion:", i,"\n")    print("Estrategia Fibonacci con Capital Acotado")    print("\tPor nro:\t", fibNro.ganadas, "ganadas\t", fibNro.perdidas, "perdidas\t", fibNro.capital, "de capital restante")    print("\tPor Color:\t", fibColor.ganadas, "ganadas\t", fibColor.perdidas, "perdidas\t", fibColor.capital, "de capital restante")    print("\tPor Docena:\t", fibDocena.ganadas, "ganadas\t", fibDocena.perdidas, "perdidas\t", fibDocena.capital, "de capital restante")    print()    print("Estrategia Martingala con Capital Acotado")    print("\tPor nro:\t", mgNro.ganadas, "ganadas\t", mgNro.perdidas, "perdidas\t", mgNro.capital, "de capital restante")    print("\tPor Color:\t", mgColor.ganadas, "ganadas\t", mgColor.perdidas, "perdidas\t", mgColor.capital, "de capital restante")    print("\tPor Docena:\t", mgDocena.ganadas, "ganadas\t", mgDocena.perdidas, "perdidas\t", mgDocena.capital, "de capital restante")        if i==0:        graficasUnaTirada(fibNro.getFrecRelativa(),fibNro.getCapitalAcum(),fibColor.getFrecRelativa(),fibColor.getCapitalAcum(),fibDocena.getFrecRelativa(),fibDocena.getCapitalAcum(), "Resultado de una iteracion - Estrategia Fibonacci - Capital finito inicial: 1M", True)        graficasUnaTirada(mgNro.getFrecRelativa(),mgNro.getCapitalAcum(),mgColor.getFrecRelativa(),mgColor.getCapitalAcum(),mgDocena.getFrecRelativa(),mgDocena.getCapitalAcum(), "Resultado de una iteracion - Estrategia Martingala - Capital finito inicial: 1M", True)    resultadosIterFibFinitoFR.append(fibColor.getFrecRelativa())    resultadosIterFibFinitoCA.append(fibColor.getCapitalAcum())    resultadosIterMartFinitoCA.append(fibColor.getCapitalAcum())    resultadosIterMartFinitoFR.append(fibColor.getFrecRelativa())###################################################################################################################################################################################################################Con Capital Infinito    fibColor = fib.Fibonacci()    fibColor.capital = 0    fibColor.capitalAcumulado[0]=0    fibNro = fib.Fibonacci()    fibNro.capital = 0    fibNro.capitalAcumulado[0]=0    fibDocena = fib.Fibonacci()    fibDocena.capital = 0    fibDocena.capitalAcumulado[0]=0    mgNro = mg.Martingala()    mgColor.capital = 0    mgColor = mg.Martingala()    mgNro.capital = 0    mgDocena = mg.Martingala()    mgDocena.capital = 0        for x in range(n):        nroFib = fibNro.apostarNro()        fibNro.resultado(ruleta.apuestaPorNro(nroFib, fibNro.apuesta))        colorFib = fibColor.apostarColor()        fibColor.resultado(ruleta.apuestaPorColor(colorFib, fibColor.apuesta))        docenaFib = fibDocena.apostarDocena()        fibDocena.resultado(ruleta.apuestaPorDocena(docenaFib, fibDocena.apuesta))        nroMg = mgNro.apostarNro()        mgNro.resultado(ruleta.apuestaPorNro(nroMg, mgNro.apuesta))        colorMg = mgColor.apostarColor()        mgColor.resultado(ruleta.apuestaPorColor(colorMg, mgColor.apuesta))        docenaMg = mgDocena.apostarDocena()        mgDocena.resultado(ruleta.apuestaPorDocena(docenaMg, mgDocena.apuesta))    print()    print("Estrategia Fibonacci con Capital Infinito")    print("\tPor nro:\t", fibNro.ganadas, "ganadas\t", fibNro.perdidas, "perdidas\t", fibNro.capital, "de ganancia/perdida total")    print("\tPor Color:\t", fibColor.ganadas, "ganadas\t", fibColor.perdidas, "perdidas\t", fibColor.capital, "de ganancia/perdida total")    print("\tPor Docena:\t", fibDocena.ganadas, "ganadas\t", fibDocena.perdidas, "perdidas\t", fibDocena.capital, "de ganancia/perdida total")    print()    print("Estrategia Martingala con Capital Infinito")    print("\tPor nro:\t", mgNro.ganadas, "ganadas\t", mgNro.perdidas, "perdidas\t", mgNro.capital, "de ganancia/perdida total")    print("\tPor Color:\t", mgColor.ganadas, "ganadas\t", mgColor.perdidas, "perdidas\t", mgColor.capital, "de ganancia/perdida total")    print("\tPor Docena:\t", mgDocena.ganadas, "ganadas\t", mgDocena.perdidas, "perdidas\t", mgDocena.capital, "de ganancia/perdida total")    if i==0:        graficasUnaTirada(fibNro.getFrecRelativa(),fibNro.getCapitalAcum(),fibColor.getFrecRelativa(),fibColor.getCapitalAcum(),fibDocena.getFrecRelativa(),fibDocena.getCapitalAcum(), "Resultado de una iteracion - Estrategia Fibonacci - Capital infinito", False)        graficasUnaTirada(mgNro.getFrecRelativa(),mgNro.getCapitalAcum(),mgColor.getFrecRelativa(),mgColor.getCapitalAcum(),mgDocena.getFrecRelativa(),mgDocena.getCapitalAcum(), "Resultado de una iteracion - Estrategia Martingala - Capital infinito", False)graficasIteraciones(resultadosIterFibFinitoFR, resultadosIterFibFinitoCA,"Graficas de 5 Iteraciones - Estrategia Fibonacci")graficasIteraciones(resultadosIterMartFinitoFR, resultadosIterMartFinitoCA, "Grafica de 5 Iteraciones - Estrategia Martingala")    